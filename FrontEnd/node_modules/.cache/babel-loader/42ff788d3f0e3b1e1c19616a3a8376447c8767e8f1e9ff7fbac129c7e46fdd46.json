{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT_ON_Github\\\\Hyperledger-Fabric\\\\FrontEnd\\\\src\\\\pages\\\\ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport \"./Login.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from \"react\";\nimport apiClient from '../communication/apiClient';\nimport CardLogIn from '../components/CardLogIn';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport UserTable from '../components/UserTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleUser = [{\n  id: \"678dcfacb91e637d2ce2f4ab\",\n  name: \"test\",\n  email: \"test@gmail.com\",\n  department: \"legal\",\n  orgId: 1,\n  secret: \"ituJDEoIPGKh\",\n  status: \"active\"\n}, {\n  id: \"678dcfacb91e637d2ce2f4ac\",\n  name: \"example\",\n  email: \"example@gmail.com\",\n  department: \"marketing\",\n  orgId: 2,\n  // secret: \"xyz123secret\",\n  status: \"inactive\"\n}\n// Add more users as needed\n];\nconst ToDo = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('drsudip.robotics@gmail.com');\n  const [password, setPassword] = useState('Sudip@123');\n  const [token, setToken] = useState('');\n\n  ////////////////////////////////////////////////\n  const handleLogin = async () => {\n    try {\n      const requestParams = {\n        email,\n        password\n      };\n      const val = {\n        params: requestParams,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer your-token-here'\n        }\n      };\n      navigate(\"/CardLogIn\"); // Redirect to \"AnotherPage\" after 3 seconds\n    } catch (error) {\n      var _error$response;\n      console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login error');\n      //  alert('Invalid login credentials');\n    }\n  };\n  //////////////////////////////////////////////\n  const testAPI_handler = async () => {\n    try {\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      ////////////////\n      const requestParams = {\n        email,\n        password\n      };\n      const val = {\n        params: requestParams,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer your-token-here'\n        }\n      };\n      const response = await Client.get('/auth/test3', val);\n      alert(response.data.message);\n    } catch (error) {\n      alert(\"API not Running\");\n    }\n  };\n  //////////////////////////////////////////////\n  const handleSignUp = async () => {\n    try {\n      // Create the Axios client\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Prepare the JSON payload for registration\n      const payload = {\n        email: \"user43@gmail.com\",\n        name: \"pavan\",\n        password: \"Admin@123\",\n        department: \"legal\",\n        orgId: 1\n      };\n\n      // Send a POST request to the /auth/register endpoint\n      const response = await Client.post('/auth/register', payload, {\n        headers: {\n          'Authorization': 'Bearer your-token-here'\n        }\n      });\n\n      // Handle the response\n      alert(response.data.message);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      if (error.response) {\n        // Handle server response errors\n        alert(`Error: ${error.response.data.message}`);\n      } else {\n        // Handle network errors or API not running\n        alert(\"API not Running or Network Error\");\n      }\n    }\n  };\n  //////////////////////////////////////////////\n  const handleGetAllUser = async () => {\n    try {\n      // Replace with a valid token\n      const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\n\n      // Create the Axios client\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token2}`\n        }\n      });\n\n      // Send a GET request to the /users endpoint\n      const response = await Client.get('/users?size=30&page=0');\n\n      // console.log(sampleUser);\n\n      // alert(response.payload);\n\n      // Handle the response\n      // console.log(response.data.payload.docs); // Log the response data\n\n      // const result= extractIdsAndStatuses(response);\n\n      // console.log(\"Extracted Array:\", result);\n\n      ////////////////////////////////\n\n      ////////////////////////////////\n\n      // alert(\"Users fetched successfully!\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      if (error.response) {\n        // Handle server response errors\n        alert(`Error: ${error.response.data.message}`);\n      } else {\n        // Handle network errors or API not running\n        alert(\"API not Running or Network Error\");\n      }\n    }\n  };\n  /////////////////////////////////////////////////\n  const extractIdsAndStatuses = response => {\n    if (response.success && response.payload.docs) {\n      const resultArray = response.payload.docs.map(doc => {\n        return {\n          id: doc.id,\n          status: doc.status\n        };\n      });\n      return resultArray;\n    } else {\n      console.error(\"Invalid response or no documents found.\");\n      return [];\n    }\n  };\n  /////////////////////////////////////////////////////\n  const handleSetActive = async () => {\n    try {\n      // Retrieve the token from localStorage\n      const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\n\n      // Create the Axios client\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token2}`\n        }\n      });\n\n      // Specify the user ID and payload\n      const userId = \"678dcfacb91e637d2ce2f4ab\"; // Replace with the desired user ID\n      const payload = {\n        status: \"active\"\n      };\n\n      // Send a PATCH request to update the user's status\n      const response = await Client.put(`/users/${userId}`, payload);\n\n      // Handle the response\n      console.log(\"Response Data:\", response.data);\n      alert(`${response.data.message}`);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      if (error.response) {\n        // Handle server response errors\n        alert(`Error: ${error.response.data.message}`);\n      } else {\n        // Handle network errors or API not running\n        alert(\"API not Running or Network Error\");\n      }\n    }\n  };\n\n  /////////////////////////////////////////////////\n\n  const btn_user_login = async () => {\n    try {\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/'\n      });\n      ////////////////\n      const requestParams = {\n        email,\n        password\n      };\n      const response = await Client.post('/auth/login', requestParams, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response); // Handle the response\n      const token = response.data.payload.access.token; // Handle the response\n      localStorage.setItem('authToken', token); // Save token with key 'authToken'\n      console.log('Token saved to localStorage:', token);\n      alert(response.data.message); // Optional, display the response message\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(error); // Log the full error\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'An error occurred'); // Handle error gracefully\n    }\n  };\n  //////////////////////////////////////////////\n  const btn_admin_login = async () => {\n    try {\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/'\n      });\n      ////////////////\n      setEmail(\"testAdmin@gmail.com\"); // setEmail(\"admin60@gmail.com\");\n      setPassword(\"Admin@123\");\n      const requestParams = {\n        email,\n        password\n      };\n      const response = await Client.post('/auth/login', requestParams, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response.data); // Handle the response\n      alert(response.data.message); // Optional, display the response message\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(error); // Log the full error\n      alert(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'An error occurred'); // Handle error gracefully\n    }\n  };\n  //////////////////////////////////////////////\n  const btn_create_note = async () => {\n    try {\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/'\n      });\n      ////////////////\n      // Dynamically retrieve the token\n      const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\n\n      const payload = {\n        title: \"EIS Anual Program\",\n        text: \"Today Final Reharsal-20:48\"\n      };\n      const response = await Client.post('/notes', payload, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token2}` // Use the dynamic token    \n        }\n      });\n      console.log(response.data); // Handle the response\n      alert(response.data.message); // Optional, display the response message\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(error); // Log the full error\n      alert(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'An error occurred'); // Handle error gracefully\n    }\n  };\n  //////////////////////////////////////////////\n  const btn_update_note = async () => {\n    try {\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/'\n      });\n      ////////////////\n      // Dynamically retrieve the token\n      const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\n\n      const payload = {\n        id: \"22d61e94-6c00-43ff-82dc-f8c09e9028e7\",\n        title: \"Serampore Bookfair Visit\",\n        text: \"hi\"\n      };\n      const response = await Client.put('/notes', payload, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token2}` // Use the dynamic token    \n        }\n      });\n      console.log(response.data); // Handle the response\n      alert(response.data.message); // Optional, display the response message\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(error); // Log the full error\n      alert(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'An error occurred'); // Handle error gracefully\n    }\n  };\n  //////////////////////////////////////////////\n  const btn_get_note = async () => {\n    try {\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/'\n      });\n      ////////////////\n      // Dynamically retrieve the token\n      const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\n\n      const noteId = \"6f620f49-7a65-4de6-a2d3-c04644d99fe3\"; // ID for the note\n\n      // Pass the ID directly in the URL\n      const response = await Client.get(`/notes/${noteId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token2}` // Use the dynamic token    \n        }\n      });\n      const noteText = response.data.payload.text;\n      const noteTitle = response.data.payload.title;\n      alert(`Title: ${noteTitle}\\nText: ${noteText}`);\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error(error); // Log the full error\n      alert(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'An error occurred'); // Handle error gracefully\n    }\n  };\n  //////////////////////////////////////////////\n  const btn_get_history = async () => {\n    try {\n      const Client = axios.create({\n        baseURL: 'http://192.168.31.196:3000/v1/'\n      });\n      ////////////////\n      // Dynamically retrieve the token\n      const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\n\n      const noteId = \"22d61e94-6c00-43ff-82dc-f8c09e9028e7\"; // ID for the note\n\n      // Pass the ID directly in the URL\n      const response = await Client.get(`/notes/history/${noteId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token2}` // Use the dynamic token    \n        }\n      });\n      console.log(response.data); // Handle the response\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error(error); // Log the full error\n      alert(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'An error occurred'); // Handle error gracefully\n    }\n  };\n  //////////<LogIn>///////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        utbl: sampleUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testAPI_handler,\n      children: \"Test API Server Runnig\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"User ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"userId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"passWord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignUp,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetAllUser,\n      children: \"Get All User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetActive,\n      children: \"Set User Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btn_user_login,\n      children: \"User LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btn_admin_login,\n      children: \"Admin LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 61\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btn_create_note,\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 61\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btn_update_note,\n      children: \"Update Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 61\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btn_get_note,\n      children: \"Get Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 55\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btn_get_history,\n      children: \"Get History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 5\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 61\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this)\n\n  // <div className='loginWrapper'>\n  //   <div className='formWrapper'>\n  //       <form onSubmit={handleSubmit}>\n  //         <div className='inputWrapper'>\n  //            <label htmlFor='name'>Name</label>\n  //            <input type='text' id='name' value={user}\n  //            onChange={(e)=>setUser(e.target.value)}\n  //            ></input>\n  //         </div>          \n  //         <div className='inputWrapper'>\n  //           <label htmlFor='email'>Email</label>\n  //           <input \n  //           type='email' \n  //           id='email'\n  //           value={email}\n  //           onChange={(e)=>setEmail(e.target.value)}\n  //           />          \n  //         </div>\n  //         <button type='submit'>Login</button>\n  //     </form>\n  //   </div>\n\n  // </div>\n  ;\n  ///////////< End of LogIn Interface>///////////////////////////\n};\n_s(ToDo, \"/oaB5yYlr7u0EA8gHAP75vtwX6g=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","axios","useNavigate","useState","apiClient","CardLogIn","BrowserRouter","Router","Routes","Route","UserTable","jsxDEV","_jsxDEV","sampleUser","id","name","email","department","orgId","secret","status","ToDo","_s","navigate","setEmail","password","setPassword","token","setToken","handleLogin","requestParams","val","params","headers","error","_error$response","console","response","data","testAPI_handler","Client","create","baseURL","get","alert","message","handleSignUp","payload","post","handleGetAllUser","token2","localStorage","getItem","extractIdsAndStatuses","success","docs","resultArray","map","doc","handleSetActive","userId","put","log","btn_user_login","access","setItem","_error$response2","_error$response2$data","btn_admin_login","_error$response3","_error$response3$data","btn_create_note","title","text","_error$response4","_error$response4$data","btn_update_note","_error$response5","_error$response5$data","btn_get_note","noteId","noteText","noteTitle","_error$response6","_error$response6$data","btn_get_history","_error$response7","_error$response7$data","children","fileName","_jsxFileName","lineNumber","columnNumber","utbl","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/PROJECT_ON_Github/Hyperledger-Fabric/FrontEnd/src/pages/ToDo.jsx"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport \"./Login.css\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport{useState} from \"react\"\r\nimport apiClient from '../communication/apiClient'\r\nimport CardLogIn from '../components/CardLogIn'\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport UserTable from '../components/UserTable';\r\n\r\n\r\nconst sampleUser = [\r\n  {\r\n    id: \"678dcfacb91e637d2ce2f4ab\",\r\n    name: \"test\",\r\n    email: \"test@gmail.com\",\r\n    department: \"legal\",\r\n    orgId: 1,\r\n    secret: \"ituJDEoIPGKh\",\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: \"678dcfacb91e637d2ce2f4ac\",\r\n    name: \"example\",\r\n    email: \"example@gmail.com\",\r\n    department: \"marketing\",\r\n    orgId: 2,\r\n    // secret: \"xyz123secret\",\r\n    status: \"inactive\",\r\n  },\r\n  // Add more users as needed\r\n];\r\n\r\n\r\n\r\nconst ToDo = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('drsudip.robotics@gmail.com');\r\n  const [password, setPassword] = useState('Sudip@123');\r\n  const [token, setToken] = useState('');\r\n\r\n  ////////////////////////////////////////////////\r\n    const handleLogin = async () => {\r\n      try {\r\n          const requestParams  = { email, password };\r\n          const val={\r\n            params: requestParams,\r\n            headers:  \r\n            {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer your-token-here'\r\n            }\r\n          }\r\n          navigate(\"/CardLogIn\"); // Redirect to \"AnotherPage\" after 3 seconds\r\n\r\n    } catch (error) {\r\n      console.error(error.response?.data || 'Login error');\r\n    //  alert('Invalid login credentials');\r\n    }\r\n  };\r\n  //////////////////////////////////////////////\r\n  const testAPI_handler = async () => {\r\n    try {\r\n      const Client = axios.create({\r\n        baseURL: 'http://192.168.31.196:3000/v1/',\r\n        headers: \r\n        {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      ////////////////\r\n        const requestParams  = { email, password };\r\n        const val={\r\n          params: requestParams,\r\n          headers:  \r\n          {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer your-token-here'\r\n          }\r\n        }\r\n      const response = await Client.get('/auth/test3', val);\r\n      alert(response.data.message);\r\n  } catch (error) {\r\n   alert(\"API not Running\");\r\n  }\r\n};\r\n//////////////////////////////////////////////\r\nconst handleSignUp = async () => {\r\n  try {\r\n    // Create the Axios client\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // Prepare the JSON payload for registration\r\n    const payload = {\r\n      email: \"user43@gmail.com\",\r\n      name: \"pavan\",\r\n      password: \"Admin@123\",\r\n      department: \"legal\",\r\n      orgId: 1,\r\n    };\r\n\r\n    // Send a POST request to the /auth/register endpoint\r\n    const response = await Client.post('/auth/register', payload, {\r\n      headers: {\r\n        'Authorization': 'Bearer your-token-here',\r\n      },\r\n    });\r\n\r\n    // Handle the response\r\n    alert(response.data.message);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    if (error.response) {\r\n      // Handle server response errors\r\n      alert(`Error: ${error.response.data.message}`);\r\n    } else {\r\n      // Handle network errors or API not running\r\n      alert(\"API not Running or Network Error\");\r\n    }\r\n  }\r\n};\r\n//////////////////////////////////////////////\r\nconst handleGetAllUser = async () => {\r\n  try {\r\n    // Replace with a valid token\r\n    const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\r\n\r\n\r\n    // Create the Axios client\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token2}`,\r\n      },\r\n    });\r\n\r\n    // Send a GET request to the /users endpoint\r\n    const response = await Client.get('/users?size=30&page=0');\r\n\r\n   // console.log(sampleUser);\r\n\r\n   // alert(response.payload);\r\n    \r\n    // Handle the response\r\n    // console.log(response.data.payload.docs); // Log the response data\r\n\r\n    // const result= extractIdsAndStatuses(response);\r\n\r\n    // console.log(\"Extracted Array:\", result);\r\n\r\n    ////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   // alert(\"Users fetched successfully!\");\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    if (error.response) {\r\n      // Handle server response errors\r\n      alert(`Error: ${error.response.data.message}`);\r\n    } else {\r\n      // Handle network errors or API not running\r\n      alert(\"API not Running or Network Error\");\r\n    }\r\n  }\r\n};\r\n/////////////////////////////////////////////////\r\nconst extractIdsAndStatuses = (response) => {\r\n  if (response.success && response.payload.docs) {\r\n    const resultArray = response.payload.docs.map((doc) => {\r\n      return { id: doc.id, status: doc.status };\r\n    });\r\n    return resultArray;\r\n  } else {\r\n    console.error(\"Invalid response or no documents found.\");\r\n    return [];\r\n  }\r\n};\r\n/////////////////////////////////////////////////////\r\nconst handleSetActive = async () => {\r\n  try {\r\n    // Retrieve the token from localStorage\r\n    const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\r\n\r\n    // Create the Axios client\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token2}`,\r\n      },\r\n    });\r\n\r\n    // Specify the user ID and payload\r\n    const userId = \"678dcfacb91e637d2ce2f4ab\"; // Replace with the desired user ID\r\n    const payload = { status: \"active\" };\r\n\r\n    // Send a PATCH request to update the user's status\r\n    const response = await Client.put(`/users/${userId}`, payload);\r\n\r\n    // Handle the response\r\n    console.log(\"Response Data:\", response.data);\r\n\r\n\r\n\r\n   alert(`${response.data.message}`);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    if (error.response) {\r\n      // Handle server response errors\r\n      alert(`Error: ${error.response.data.message}`);\r\n    } else {\r\n      // Handle network errors or API not running\r\n      alert(\"API not Running or Network Error\");\r\n    }\r\n  }\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\nconst btn_user_login = async () => {\r\n  try {\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/'\r\n    });\r\n    ////////////////\r\n      const requestParams  = {email , password };\r\n   \r\n      const response = await Client.post('/auth/login', requestParams, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log(response); // Handle the response\r\n      const token=response.data.payload.access.token; // Handle the response\r\n      localStorage.setItem('authToken', token); // Save token with key 'authToken'\r\n      console.log('Token saved to localStorage:', token);\r\n      alert(response.data.message); // Optional, display the response message\r\n\r\n    } catch (error) {\r\n      console.error(error); // Log the full error\r\n      alert(error.response?.data?.message || 'An error occurred'); // Handle error gracefully\r\n    }\r\n  };\r\n//////////////////////////////////////////////\r\nconst btn_admin_login = async () => {\r\n  try {\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/'\r\n    });\r\n    ////////////////\r\n    setEmail(\"testAdmin@gmail.com\");// setEmail(\"admin60@gmail.com\");\r\n    setPassword(\"Admin@123\");\r\n      const requestParams  = {email , password };\r\n   \r\n      const response = await Client.post('/auth/login', requestParams, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log(response.data); // Handle the response\r\n      alert(response.data.message); // Optional, display the response message\r\n\r\n    } catch (error) {\r\n      console.error(error); // Log the full error\r\n      alert(error.response?.data?.message || 'An error occurred'); // Handle error gracefully\r\n    }\r\n  };\r\n//////////////////////////////////////////////\r\nconst btn_create_note = async () => {\r\n  try {\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/'\r\n    });\r\n    ////////////////\r\n    // Dynamically retrieve the token\r\n    const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\r\n\r\n    const payload = {\r\n      title: \"EIS Anual Program\",\r\n      text: \"Today Final Reharsal-20:48\"\r\n    };\r\n   \r\n      const response = await Client.post('/notes', payload, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token2}` // Use the dynamic token    \r\n        }\r\n      });\r\n\r\n      console.log(response.data); // Handle the response\r\n      alert(response.data.message); // Optional, display the response message\r\n\r\n    } catch (error) {\r\n      console.error(error); // Log the full error\r\n      alert(error.response?.data?.message || 'An error occurred'); // Handle error gracefully\r\n    }\r\n  };\r\n//////////////////////////////////////////////\r\nconst btn_update_note = async () => {\r\n  try {\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/'\r\n    });\r\n    ////////////////\r\n    // Dynamically retrieve the token\r\n    const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\r\n\r\n    const payload = {\r\n      id: \"22d61e94-6c00-43ff-82dc-f8c09e9028e7\",\r\n      title: \"Serampore Bookfair Visit\",\r\n      text: \"hi\"\r\n    };\r\n   \r\n      const response = await Client.put('/notes', payload, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token2}` // Use the dynamic token    \r\n        }\r\n      });\r\n\r\n      console.log(response.data); // Handle the response\r\n      alert(response.data.message); // Optional, display the response message\r\n\r\n    } catch (error) {\r\n      console.error(error); // Log the full error\r\n      alert(error.response?.data?.message || 'An error occurred'); // Handle error gracefully\r\n    }\r\n  };\r\n//////////////////////////////////////////////\r\nconst btn_get_note = async () => {\r\n  try {\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/'\r\n    });\r\n    ////////////////\r\n    // Dynamically retrieve the token\r\n    const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\r\n\r\n    const noteId = \"6f620f49-7a65-4de6-a2d3-c04644d99fe3\"; // ID for the note\r\n\r\n     // Pass the ID directly in the URL\r\n     const response = await Client.get(`/notes/${noteId}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token2}`, // Use the dynamic token    \r\n      },\r\n    });\r\n      const noteText = response.data.payload.text;\r\n      const noteTitle = response.data.payload.title;\r\n      alert(`Title: ${noteTitle}\\nText: ${noteText}`);\r\n      \r\n    } catch (error) {\r\n      console.error(error); // Log the full error\r\n      alert(error.response?.data?.message || 'An error occurred'); // Handle error gracefully\r\n    }\r\n  };\r\n//////////////////////////////////////////////\r\nconst btn_get_history = async () => {\r\n  try {\r\n    const Client = axios.create({\r\n      baseURL: 'http://192.168.31.196:3000/v1/'\r\n    });\r\n    ////////////////\r\n    // Dynamically retrieve the token\r\n    const token2 = localStorage.getItem('authToken'); // Replace with sessionStorage or a variable if needed\r\n\r\n    const noteId = \"22d61e94-6c00-43ff-82dc-f8c09e9028e7\"; // ID for the note\r\n\r\n     // Pass the ID directly in the URL\r\n     const response = await Client.get(`/notes/history/${noteId}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token2}`, // Use the dynamic token    \r\n      },\r\n    });\r\n       \r\n    console.log(response.data); // Handle the response\r\n \r\n    } catch (error) {\r\n      console.error(error); // Log the full error\r\n      alert(error.response?.data?.message || 'An error occurred'); // Handle error gracefully\r\n    }\r\n  };\r\n  //////////<LogIn>///////////////////////////\r\n\r\n\r\n\r\n  return (\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div>\r\n    <h1>ToDo</h1>\r\n\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      {/* console.log(sampleUser); */}\r\n      <UserTable utbl={sampleUser} />\r\n    </div>\r\n\r\n    <button onClick={testAPI_handler}>Test API Server Runnig</button> \r\n    <br></br>  <br></br>\r\n\r\n    {/*===============Register a user================*/}\r\n    <label>User ID</label> <input id=\"userId\" />\r\n    <label>Password</label> <input id=\"passWord\" />\r\n    <button onClick={handleSignUp}>Sign Up</button>\r\n    {/* =========================================== */}\r\n    <br></br>  <br></br>\r\n\r\n    <button onClick={handleGetAllUser}>Get All User</button>\r\n    <br></br>  <br></br>\r\n\r\n    <button onClick={handleSetActive}>Set User Active</button>\r\n    <br></br>  <br></br>\r\n\r\n    <button onClick={btn_user_login}>User LogIn</button> \r\n    \r\n    <br></br>  <br></br>\r\n\r\n    <button onClick={btn_admin_login}>Admin LogIn</button>  <br></br>  <br></br>\r\n\r\n    <button onClick={btn_create_note}>Create Note</button>  <br></br>  <br></br>\r\n\r\n    <button onClick={btn_update_note}>Update Note</button>  <br></br>  <br></br>\r\n\r\n    <button onClick={btn_get_note}>Get Note</button>  <br></br>  <br></br>\r\n\r\n    <button onClick={btn_get_history}>Get History</button>  <br></br>  <br></br>\r\n\r\n    {/* <CardLogIn/> */}\r\n    {/* <label>Email</label> \r\n\r\n    <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\r\n    <button onClick={handleLogin}>USER LogIn</button> \r\n    <button onClick={handleLogin}>Admin LogIn</button> \r\n    \r\n    \r\n    <br></br>\r\n    <br></br> */}\r\n\r\n    <input\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n    />\r\n    <input\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}\r\n    />\r\n    <button onClick={handleLogin}>Login</button>\r\n  </div>\r\n\r\n\r\n    // <div className='loginWrapper'>\r\n    //   <div className='formWrapper'>\r\n    //       <form onSubmit={handleSubmit}>\r\n    //         <div className='inputWrapper'>\r\n    //            <label htmlFor='name'>Name</label>\r\n    //            <input type='text' id='name' value={user}\r\n    //            onChange={(e)=>setUser(e.target.value)}\r\n    //            ></input>\r\n    //         </div>          \r\n    //         <div className='inputWrapper'>\r\n    //           <label htmlFor='email'>Email</label>\r\n    //           <input \r\n    //           type='email' \r\n    //           id='email'\r\n    //           value={email}\r\n    //           onChange={(e)=>setEmail(e.target.value)}\r\n    //           />          \r\n    //         </div>\r\n    //         <button type='submit'>Login</button>\r\n    //     </form>\r\n    //   </div>\r\n   \r\n    // </div>\r\n\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  )\r\n  ///////////< End of LogIn Interface>///////////////////////////\r\n  \r\n\r\n\r\n\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}