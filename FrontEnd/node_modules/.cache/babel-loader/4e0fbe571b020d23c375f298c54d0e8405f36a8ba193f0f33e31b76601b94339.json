{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudip\\\\OneDrive\\\\Desktop\\\\demo_web_30122024\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"./Login.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from \"react\";\nimport apiClient from '../communication/apiClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // const handleLogin = async () => {\n  //   try {\n  //     const response = await apiClient.post('/login', { email, password });\n  //     const { token } = response.data;\n\n  //     // Store token in localStorage\n  //     localStorage.setItem('authToken', token);\n  //     alert('Login successful! Token stored.');\n  //   } catch (error) {\n  //     console.error(error.response?.data || 'Login error');\n  //     alert('Invalid login credentials');\n  //   }\n  // };\n\n  const [user, setUser] = useState(\"\");\n  // const[email,setEmail]=useState(\"\");\n  const navigate = useNavigate();\n\n  // const handleLogin=(e)=>{\n  //   e.preventDefault();\n  //   navigate(-1);\n  //   localStorage.setItem(\"user\",JSON.stringify(user));\n  //   setUser(\"\");\n  //   setEmail(\"\");\n  //   console.log(\"login button pressed\");\n\n  // }\n\n  const handleLogin = async () => {\n    try {\n      const response = await apiClient.get('api/verify-token', {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('authToken', token);\n      alert('Login successful! Token stored.');\n    } catch (error) {\n      var _error$response;\n      console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login error');\n      alert('Invalid login credentials');\n    }\n  };\n\n  //////////<LogIn>//////////////////////////////////////////////\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this)\n\n  // <div className='loginWrapper'>\n  //   <div className='formWrapper'>\n  //       <form onSubmit={handleSubmit}>\n  //         <div className='inputWrapper'>\n  //            <label htmlFor='name'>Name</label>\n  //            <input type='text' id='name' value={user}\n  //            onChange={(e)=>setUser(e.target.value)}\n  //            ></input>\n  //         </div>          \n  //         <div className='inputWrapper'>\n  //           <label htmlFor='email'>Email</label>\n  //           <input \n  //           type='email' \n  //           id='email'\n  //           value={email}\n  //           onChange={(e)=>setEmail(e.target.value)}\n  //           />          \n  //         </div>\n  //         <button type='submit'>Login</button>\n  //     </form>\n  //   </div>\n\n  // </div>\n  ;\n  ///////////< End of LogIn Interface>///////////////////////////\n};\n_s(Login, \"BLdQTD4yNzBsIz1rgDUe59Vh86A=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","useState","apiClient","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","user","setUser","navigate","handleLogin","response","get","token","data","localStorage","setItem","alert","error","_error$response","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sudip/OneDrive/Desktop/demo_web_30122024/src/pages/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport \"./Login.css\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport{useState} from \"react\"\r\nimport apiClient from '../communication/apiClient'\r\n\r\nconst Login = () => {\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // const handleLogin = async () => {\r\n  //   try {\r\n  //     const response = await apiClient.post('/login', { email, password });\r\n  //     const { token } = response.data;\r\n\r\n  //     // Store token in localStorage\r\n  //     localStorage.setItem('authToken', token);\r\n  //     alert('Login successful! Token stored.');\r\n  //   } catch (error) {\r\n  //     console.error(error.response?.data || 'Login error');\r\n  //     alert('Invalid login credentials');\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const[user,setUser]=useState(\"\");\r\n    // const[email,setEmail]=useState(\"\");\r\n    const navigate=useNavigate();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const handleLogin=(e)=>{\r\n  //   e.preventDefault();\r\n  //   navigate(-1);\r\n  //   localStorage.setItem(\"user\",JSON.stringify(user));\r\n  //   setUser(\"\");\r\n  //   setEmail(\"\");\r\n  //   console.log(\"login button pressed\");\r\n\r\n  // }\r\n\r\n\r\n\r\n     const handleLogin = async () => {\r\n    try {\r\n      const response = await apiClient.get('api/verify-token', { email, password });\r\n      const { token } = response.data;\r\n\r\n      // Store token in localStorage\r\n      localStorage.setItem('authToken', token);\r\n      alert('Login successful! Token stored.');\r\n    } catch (error) {\r\n      console.error(error.response?.data || 'Login error');\r\n      alert('Invalid login credentials');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //////////<LogIn>//////////////////////////////////////////////\r\n  return (\r\n\r\n    <div>\r\n    <h1>Login</h1>\r\n    <input\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n    />\r\n    <input\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}\r\n    />\r\n    <button onClick={handleLogin}>Login</button>\r\n  </div>\r\n\r\n\r\n    // <div className='loginWrapper'>\r\n    //   <div className='formWrapper'>\r\n    //       <form onSubmit={handleSubmit}>\r\n    //         <div className='inputWrapper'>\r\n    //            <label htmlFor='name'>Name</label>\r\n    //            <input type='text' id='name' value={user}\r\n    //            onChange={(e)=>setUser(e.target.value)}\r\n    //            ></input>\r\n    //         </div>          \r\n    //         <div className='inputWrapper'>\r\n    //           <label htmlFor='email'>Email</label>\r\n    //           <input \r\n    //           type='email' \r\n    //           id='email'\r\n    //           value={email}\r\n    //           onChange={(e)=>setEmail(e.target.value)}\r\n    //           />          \r\n    //         </div>\r\n    //         <button type='submit'>Login</button>\r\n    //     </form>\r\n    //   </div>\r\n   \r\n    // </div>\r\n  )\r\n  ///////////< End of LogIn Interface>///////////////////////////\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}