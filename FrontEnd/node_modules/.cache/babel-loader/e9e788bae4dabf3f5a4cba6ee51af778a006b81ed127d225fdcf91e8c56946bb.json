{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudip\\\\OneDrive\\\\Desktop\\\\demo_web_30122024\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// Contact.js\nimport React, { useState } from 'react';\nimport './Register.css';\nimport apiClient from '../communication/apiClient';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { delay } from \"lodash\";\n\n/////////////////////////////////////////////////////////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  //_____________________________________________________________________________________________________________________________\n  const btn_submit = async e => {\n    e.preventDefault();\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email validation\n    if (!emailRegex.test(email)) {\n      alert(\"Please enter a valid email address.\");\n      return;\n    }\n    toast(\"This is a toast message!\");\n    // alert(\"send OK\");\n    const requestParams = {\n      name,\n      email,\n      timestamp: Date.now(),\n      version: '1.0'\n    };\n    // const resp=handleLogin(requestParams);\n    // console.log(resp);\n\n    // await delay(1000); // 1 second delay\n\n    const oneSecondDelay = () => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n        }, 10000); // 1 second = 1000 milliseconds\n      });\n    };\n    navigate(\"/home\"); // Redirect to \"AnotherPage\" after 3 seconds\n\n    //  const timer = setTimeout(() => {\n    //   navigate(\"/home\"); // Redirect to \"AnotherPage\" after 3 seconds\n    // }, 3000);\n    // clearTimeout(timer); // Cleanup on unmount\n  };\n  const oneSecondDelay = () => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, 1000); // 1 second = 1000 milliseconds\n    });\n  };\n  ////////////////////////////////////////////\n  const handleLogin = async requestParams => {\n    try {\n      const val = {\n        params: requestParams,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer your-token-here'\n        }\n      };\n      const response = await apiClient.get('/register', val);\n      return response;\n    } catch (error) {\n      var _error$response;\n      console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Submission error.. Try Again');\n    }\n  };\n  //_____________________________________________________________________________________________________________________________\n  const handleName = e => {\n    setName(e.target.value);\n  };\n  //_____________________________________________________________________________________________________________________________\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n  //_____________________________________________________________________________________________________________________________\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"USER REGISTRATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          onChange: handleEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: btn_submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n  /////////////////////////////////////////////////////////////////////////////\n};\n_s(Register, \"YftCQVKgWsvGsTjumngCw0cFU7M=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","apiClient","ToastContainer","toast","useNavigate","delay","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","navigate","btn_submit","e","preventDefault","emailRegex","test","alert","requestParams","timestamp","Date","now","version","oneSecondDelay","Promise","resolve","setTimeout","handleLogin","val","params","headers","response","get","error","_error$response","console","data","handleName","target","value","handleEmail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sudip/OneDrive/Desktop/demo_web_30122024/src/pages/Register.jsx"],"sourcesContent":["// Contact.js\r\nimport React, { useState } from 'react';\r\nimport './Register.css';\r\nimport apiClient from '../communication/apiClient'\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { delay } from \"lodash\";\r\n\r\n/////////////////////////////////////////////////////////\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  //_____________________________________________________________________________________________________________________________\r\n  const btn_submit = async(e) => \r\n  {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Regex for email validation\r\n    if (!emailRegex.test(email)) {\r\n        alert(\"Please enter a valid email address.\");\r\n        return;\r\n    }\r\n\r\n    toast(\"This is a toast message!\");\r\n   // alert(\"send OK\");\r\n    const requestParams  = {\r\n        name,\r\n        email,\r\n        timestamp: Date.now(),\r\n        version: '1.0'\r\n      };\r\n     // const resp=handleLogin(requestParams);\r\n     // console.log(resp);\r\n\r\n      // await delay(1000); // 1 second delay\r\n\r\n  const oneSecondDelay = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 10000); // 1 second = 1000 milliseconds\r\n    });\r\n  };\r\n\r\n     navigate(\"/home\"); // Redirect to \"AnotherPage\" after 3 seconds\r\n     \r\n    //  const timer = setTimeout(() => {\r\n    //   navigate(\"/home\"); // Redirect to \"AnotherPage\" after 3 seconds\r\n    // }, 3000);\r\n    // clearTimeout(timer); // Cleanup on unmount\r\n  \r\n\r\n  };\r\n\r\n\r\n  const oneSecondDelay = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 1000); // 1 second = 1000 milliseconds\r\n    });\r\n  };\r\n  ////////////////////////////////////////////\r\n  const handleLogin = async (requestParams) => {\r\n    try {\r\n        const val={\r\n          params: requestParams,\r\n          headers: \r\n          {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer your-token-here'\r\n          }\r\n        } \r\n        const response = await apiClient.get('/register', val);\r\n        return response;\r\n    } catch (error) {\r\n      console.error(error.response?.data || 'Submission error.. Try Again');\r\n    }\r\n  };\r\n//_____________________________________________________________________________________________________________________________\r\nconst handleName = (e) => {\r\n    setName(e.target.value);\r\n};\r\n//_____________________________________________________________________________________________________________________________\r\nconst handleEmail = (e) => {\r\n  setEmail(e.target.value);\r\n};\r\n//_____________________________________________________________________________________________________________________________\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <h2>USER REGISTRATION</h2>\r\n      <form className=\"contact-form\"  >\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input type=\"text\" id=\"name\" name=\"name\" onChange={handleName} />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" onChange={handleEmail}/>\r\n        </div>\r\n\r\n        <button className=\"submit-button\" onClick={btn_submit}>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n  /////////////////////////////////////////////////////////////////////////////\r\n};\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}