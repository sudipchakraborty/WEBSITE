{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudip\\\\OneDrive\\\\Desktop\\\\demo_web_30122024\\\\src\\\\pages\\\\ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"./Login.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from \"react\";\nimport apiClient from '../communication/apiClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDo = () => {\n  _s();\n  const [email, setEmail] = useState('drsudip.robotics@gmail.com');\n  const [password, setPassword] = useState('Sudip@123');\n\n  // const handleLogin = async () => {\n  //   try {\n  //     const response = await apiClient.post('/login', { email, password });\n  //     const { token } = response.data;\n\n  //     // Store token in localStorage\n  //     localStorage.setItem('authToken', token);\n  //     alert('Login successful! Token stored.');\n  //   } catch (error) {\n  //     console.error(error.response?.data || 'Login error');\n  //     alert('Invalid login credentials');\n  //   }\n  // };\n\n  // const[user,setUser]=useState(\"\");\n  // // const[email,setEmail]=useState(\"\");\n  // const navigate=useNavigate();\n\n  // const handleLogin=(e)=>{\n  //   e.preventDefault();\n  //   navigate(-1);\n  //   localStorage.setItem(\"user\",JSON.stringify(user));\n  //   setUser(\"\");\n  //   setEmail(\"\");\n  //   console.log(\"login button pressed\");\n\n  // }\n\n  ////////////////////////////////////////////////\n  const handleLogin = async () => {\n    try {\n      const requestParams = {\n        email,\n        password\n      };\n      const val = {\n        params: requestParams,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer your-token-here'\n        }\n      };\n      ///////////////////////////////////////////////\n      // const response = await apiClient.get('/auth/test3', val);\n      const response = await apiClient.post('/auth/login', requestParams);\n      console.log(response);\n\n      // /////////////////////////////////////// /////////\n      //  const handleLogin = async () => {\n      // try {\n\n      //     const requestParams  = {\n      //       email,\n      //       password,\n      //       timestamp: Date.now(),\n      //       version: '1.0'\n      //     };\n\n      //     const val={\n      //       params: requestParams,\n      //       headers: \n      //       {\n      //         'Content-Type': 'application/json',\n      //         'Authorization': 'Bearer your-token-here'\n      //       }\n      //     }\n\n      //  const response = await apiClient.get('/logIn', val);\n      // alert(response.data.message);\n\n      //     ///////////////////////////////////////////////\n\n      // console.log(\"dfgfdgdfgdfgdg@@@@@@@@@@\", val);\n\n      // Modify the request line with additional parameters\n\n      // const response = await apiClient.get('/test', { email, password });\n      // const { token } = response.data;\n\n      // // Store token in localStorage\n      // localStorage.setItem('authToken', token);\n      // alert('Login successful! Token stored.');\n    } catch (error) {\n      var _error$response;\n      console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login error');\n      //  alert('Invalid login credentials');\n    }\n  };\n\n  //////////<LogIn>//////////////////////////////////////////////\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"USER LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this)\n\n  // <div className='loginWrapper'>\n  //   <div className='formWrapper'>\n  //       <form onSubmit={handleSubmit}>\n  //         <div className='inputWrapper'>\n  //            <label htmlFor='name'>Name</label>\n  //            <input type='text' id='name' value={user}\n  //            onChange={(e)=>setUser(e.target.value)}\n  //            ></input>\n  //         </div>          \n  //         <div className='inputWrapper'>\n  //           <label htmlFor='email'>Email</label>\n  //           <input \n  //           type='email' \n  //           id='email'\n  //           value={email}\n  //           onChange={(e)=>setEmail(e.target.value)}\n  //           />          \n  //         </div>\n  //         <button type='submit'>Login</button>\n  //     </form>\n  //   </div>\n\n  // </div>\n  ;\n  ///////////< End of LogIn Interface>///////////////////////////\n};\n_s(ToDo, \"LSojWEV010PjP8LubjGgbK1y0Xc=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useNavigate","useState","apiClient","jsxDEV","_jsxDEV","ToDo","_s","email","setEmail","password","setPassword","handleLogin","requestParams","val","params","headers","response","post","console","log","error","_error$response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/sudip/OneDrive/Desktop/demo_web_30122024/src/pages/ToDo.jsx"],"sourcesContent":["import React from 'react'\r\nimport \"./Login.css\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport{useState} from \"react\"\r\nimport apiClient from '../communication/apiClient'\r\n\r\nconst ToDo = () => {\r\n  \r\n  const [email, setEmail] = useState('drsudip.robotics@gmail.com');\r\n  const [password, setPassword] = useState('Sudip@123');\r\n\r\n  // const handleLogin = async () => {\r\n  //   try {\r\n  //     const response = await apiClient.post('/login', { email, password });\r\n  //     const { token } = response.data;\r\n\r\n  //     // Store token in localStorage\r\n  //     localStorage.setItem('authToken', token);\r\n  //     alert('Login successful! Token stored.');\r\n  //   } catch (error) {\r\n  //     console.error(error.response?.data || 'Login error');\r\n  //     alert('Invalid login credentials');\r\n  //   }\r\n  // };\r\n\r\n    // const[user,setUser]=useState(\"\");\r\n    // // const[email,setEmail]=useState(\"\");\r\n    // const navigate=useNavigate();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const handleLogin=(e)=>{\r\n  //   e.preventDefault();\r\n  //   navigate(-1);\r\n  //   localStorage.setItem(\"user\",JSON.stringify(user));\r\n  //   setUser(\"\");\r\n  //   setEmail(\"\");\r\n  //   console.log(\"login button pressed\");\r\n\r\n  // }\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////\r\n    const handleLogin = async () => {\r\n      try {\r\n  \r\n          const requestParams  = {\r\n            email,\r\n            password\r\n          };\r\n  \r\n          const val={\r\n            params: requestParams,\r\n            headers: \r\n            {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer your-token-here'\r\n            }\r\n          }\r\n          ///////////////////////////////////////////////\r\n          // const response = await apiClient.get('/auth/test3', val);\r\n          const response = await apiClient.post('/auth/login', requestParams);\r\n          console.log(response);\r\n\r\n    // /////////////////////////////////////// /////////\r\n    //  const handleLogin = async () => {\r\n    // try {\r\n\r\n    //     const requestParams  = {\r\n    //       email,\r\n    //       password,\r\n    //       timestamp: Date.now(),\r\n    //       version: '1.0'\r\n    //     };\r\n\r\n    //     const val={\r\n    //       params: requestParams,\r\n    //       headers: \r\n    //       {\r\n    //         'Content-Type': 'application/json',\r\n    //         'Authorization': 'Bearer your-token-here'\r\n    //       }\r\n    //     }\r\n\r\n    //  const response = await apiClient.get('/logIn', val);\r\n       // alert(response.data.message);\r\n\r\n    //     ///////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n    \r\n        // console.log(\"dfgfdgdfgdfgdg@@@@@@@@@@\", val);\r\n\r\n        // Modify the request line with additional parameters\r\n       \r\n        \r\n\r\n\r\n\r\n      // const response = await apiClient.get('/test', { email, password });\r\n      // const { token } = response.data;\r\n\r\n      // // Store token in localStorage\r\n      // localStorage.setItem('authToken', token);\r\n      // alert('Login successful! Token stored.');\r\n    } catch (error) {\r\n      console.error(error.response?.data || 'Login error');\r\n    //  alert('Invalid login credentials');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //////////<LogIn>//////////////////////////////////////////////\r\n  return (\r\n\r\n    <div>\r\n    <h1>ToDo</h1>\r\n\r\n    <button onClick={handleLogin}>USER LogIn</button> <br></br>\r\n\r\n    <input\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n    />\r\n    <input\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}\r\n    />\r\n    <button onClick={handleLogin}>Login</button>\r\n  </div>\r\n\r\n\r\n    // <div className='loginWrapper'>\r\n    //   <div className='formWrapper'>\r\n    //       <form onSubmit={handleSubmit}>\r\n    //         <div className='inputWrapper'>\r\n    //            <label htmlFor='name'>Name</label>\r\n    //            <input type='text' id='name' value={user}\r\n    //            onChange={(e)=>setUser(e.target.value)}\r\n    //            ></input>\r\n    //         </div>          \r\n    //         <div className='inputWrapper'>\r\n    //           <label htmlFor='email'>Email</label>\r\n    //           <input \r\n    //           type='email' \r\n    //           id='email'\r\n    //           value={email}\r\n    //           onChange={(e)=>setEmail(e.target.value)}\r\n    //           />          \r\n    //         </div>\r\n    //         <button type='submit'>Login</button>\r\n    //     </form>\r\n    //   </div>\r\n   \r\n    // </div>\r\n  )\r\n  ///////////< End of LogIn Interface>///////////////////////////\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}