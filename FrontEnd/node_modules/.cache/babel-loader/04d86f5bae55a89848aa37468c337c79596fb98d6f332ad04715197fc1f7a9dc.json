{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudip\\\\OneDrive\\\\Desktop\\\\demo_web_30122024\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// Contact.js\nimport React, { useState } from 'react';\nimport './Register.css';\nimport apiClient from '../communication/apiClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const btn_submit = e => {\n    e.preventDefault();\n    // Handle form submission (e.g., send data to an API)\n    // console.log('Form data submitted:', formData.email);\n\n    const requestParams = {\n      name,\n      email,\n      timestamp: Date.now(),\n      version: '1.0'\n    };\n    const handleLogin = async () => {\n      try {\n        const val = {\n          params: requestParams,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer your-token-here'\n          }\n        };\n        console.log(\"dfgfdgdfgdfgdg@@@@@@@@@@\", val);\n\n        // Modify the request line with additional parameters\n        const response = await apiClient.get('/test', val);\n        console.log(response);\n\n        // const response = await apiClient.get('/test', { email, password });\n        // const { token } = response.data;\n\n        // // Store token in localStorage\n        // localStorage.setItem('authToken', token);\n        // alert('Login successful! Token stored.');\n      } catch (error) {\n        var _error$response;\n        console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login error');\n        //  alert('Invalid login credentials');\n      }\n    };\n\n    // setFormStatus('Form submitted successfully!.. check your email for logIn password');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"USER REGISTRATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\"\n          // value={formData.name}\n          // onChange={handleChange}\n          // required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\"\n          // value={formData.email}\n          // onChange={handleChange}\n          // required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: btn_submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"+yYzMrF0jCuADaceubK5n/EGEjo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","apiClient","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","btn_submit","e","preventDefault","requestParams","timestamp","Date","now","version","handleLogin","val","params","headers","console","log","response","get","error","_error$response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sudip/OneDrive/Desktop/demo_web_30122024/src/pages/Register.jsx"],"sourcesContent":["// Contact.js\r\nimport React, { useState } from 'react';\r\nimport './Register.css';\r\nimport apiClient from '../communication/apiClient'\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n   const btn_submit = (e) => {\r\n    e.preventDefault();\r\n    // Handle form submission (e.g., send data to an API)\r\n   // console.log('Form data submitted:', formData.email);\r\n\r\n\r\n\r\n        const requestParams  = {\r\n            name,\r\n            email,\r\n            timestamp: Date.now(),\r\n            version: '1.0'\r\n          };\r\n\r\n\r\n    const handleLogin = async () => {\r\n      try {\r\n\r\n          const val={\r\n            params: requestParams,\r\n            headers: \r\n            {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer your-token-here'\r\n            }\r\n          }\r\n      \r\n          console.log(\"dfgfdgdfgdfgdg@@@@@@@@@@\", val);\r\n  \r\n          // Modify the request line with additional parameters\r\n          const response = await apiClient.get('/test', val);\r\n  \r\n  \r\n          console.log(response);\r\n  \r\n  \r\n  \r\n        // const response = await apiClient.get('/test', { email, password });\r\n        // const { token } = response.data;\r\n  \r\n        // // Store token in localStorage\r\n        // localStorage.setItem('authToken', token);\r\n        // alert('Login successful! Token stored.');\r\n      } catch (error) {\r\n        console.error(error.response?.data || 'Login error');\r\n      //  alert('Invalid login credentials');\r\n      }\r\n    };\r\n \r\n\r\n   // setFormStatus('Form submitted successfully!.. check your email for logIn password');\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <h2>USER REGISTRATION</h2>\r\n      <form className=\"contact-form\"  >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            // value={formData.name}\r\n            // onChange={handleChange}\r\n            // required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            // value={formData.email}\r\n            // onChange={handleChange}\r\n            // required\r\n          />\r\n        </div>\r\n  \r\n        <button className=\"submit-button\" onClick={btn_submit}>Submit</button>\r\n      </form>\r\n      {/* {formStatus && <p className=\"form-status\">{formStatus}</p>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,SAAS,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMU,UAAU,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACD;;IAIK,MAAMC,aAAa,GAAI;MACnBP,IAAI;MACJE,KAAK;MACLM,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACrBC,OAAO,EAAE;IACX,CAAC;IAGP,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QAEA,MAAMC,GAAG,GAAC;UACRC,MAAM,EAAEP,aAAa;UACrBQ,OAAO,EACP;YACE,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE;UACnB;QACF,CAAC;QAEDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,GAAG,CAAC;;QAE5C;QACA,MAAMK,QAAQ,GAAG,MAAMvB,SAAS,CAACwB,GAAG,CAAC,OAAO,EAAEN,GAAG,CAAC;QAGlDG,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;;QAIvB;QACA;;QAEA;QACA;QACA;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QAAA,IAAAC,eAAA;QACdL,OAAO,CAACI,KAAK,CAAC,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAI,aAAa,CAAC;QACtD;MACA;IACF,CAAC;;IAGF;EACD,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC3B,OAAA;MAAA2B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B/B,OAAA;MAAM0B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5B3B,OAAA;QAAK0B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3B,OAAA;UAAOgC,OAAO,EAAC,MAAM;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC/B,OAAA;UACEiC,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,MAAM;UACT/B,IAAI,EAAC;UACL;UACA;UACA;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN/B,OAAA;QAAK0B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3B,OAAA;UAAOgC,OAAO,EAAC,OAAO;UAAAL,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC/B,OAAA;UACEiC,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACV/B,IAAI,EAAC;UACL;UACA;UACA;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN/B,OAAA;QAAQ0B,SAAS,EAAC,eAAe;QAACS,OAAO,EAAE5B,UAAW;QAAAoB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAzFID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA2Fd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}