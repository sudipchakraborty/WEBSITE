{"ast":null,"code":"import axios from 'axios';\n\n// Create Axios instance\nconst apiClient = axios.create({\n  // baseURL: 'http://192.168.31.196:5000/api',\n  baseURL: 'http://192.168.31.196:3000/v1/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the token in the Authorization header\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken'); // Retrieve token from storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["D:/PROJECT_ON_Github/Hyperledger-Fabric/FrontEnd/src/communication/apiClient.js"],"sourcesContent":["import axios from 'axios';\n\n// Create Axios instance\nconst apiClient = axios.create({\n  // baseURL: 'http://192.168.31.196:5000/api',\n  baseURL: 'http://192.168.31.196:3000/v1/',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to include the token in the Authorization header\napiClient.interceptors.request.use((config) => {\n  const token = localStorage.getItem('authToken'); // Retrieve token from storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\nexport default apiClient;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7B;EACAC,OAAO,EAAE,gCAAgC;EACzCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EAAGK,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeZ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}