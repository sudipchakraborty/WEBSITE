{"ast":null,"code":"import React from'react';import\"./Login.css\";import{useNavigate}from'react-router-dom';import{useState}from\"react\";import apiClient from'../communication/apiClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('drsudip.robotics@gmail.com');const[password,setPassword]=useState('Sudip@123');// const handleLogin = async () => {\n//   try {\n//     const response = await apiClient.post('/login', { email, password });\n//     const { token } = response.data;\n//     // Store token in localStorage\n//     localStorage.setItem('authToken', token);\n//     alert('Login successful! Token stored.');\n//   } catch (error) {\n//     console.error(error.response?.data || 'Login error');\n//     alert('Invalid login credentials');\n//   }\n// };\n// const[user,setUser]=useState(\"\");\n// // const[email,setEmail]=useState(\"\");\n// const navigate=useNavigate();\n// const handleLogin=(e)=>{\n//   e.preventDefault();\n//   navigate(-1);\n//   localStorage.setItem(\"user\",JSON.stringify(user));\n//   setUser(\"\");\n//   setEmail(\"\");\n//   console.log(\"login button pressed\");\n// }\n////////////////////////////////////////////////\nconst handleLogin=async()=>{try{const requestParams={email,password};const val={params:requestParams,headers:{'Content-Type':'application/json','Authorization':'Bearer your-token-here'}};///////////////////////////////////////////////\n// const response = await apiClient.get('/auth/test3', val);\nconst response=await apiClient.post('/auth/login',requestParams);console.log(response);// /////////////////////////////////////// /////////\n//  const handleLogin = async () => {\n// try {\n//     const requestParams  = {\n//       email,\n//       password,\n//       timestamp: Date.now(),\n//       version: '1.0'\n//     };\n//     const val={\n//       params: requestParams,\n//       headers: \n//       {\n//         'Content-Type': 'application/json',\n//         'Authorization': 'Bearer your-token-here'\n//       }\n//     }\n//  const response = await apiClient.get('/logIn', val);\n// alert(response.data.message);\n//     ///////////////////////////////////////////////\n// console.log(\"dfgfdgdfgdfgdg@@@@@@@@@@\", val);\n// Modify the request line with additional parameters\n// const response = await apiClient.get('/test', { email, password });\n// const { token } = response.data;\n// // Store token in localStorage\n// localStorage.setItem('authToken', token);\n// alert('Login successful! Token stored.');\n}catch(error){var _error$response;console.error(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||'Login error');//  alert('Invalid login credentials');\n}};//////////<LogIn>//////////////////////////////////////////////\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"Login\"})]})// <div className='loginWrapper'>\n//   <div className='formWrapper'>\n//       <form onSubmit={handleSubmit}>\n//         <div className='inputWrapper'>\n//            <label htmlFor='name'>Name</label>\n//            <input type='text' id='name' value={user}\n//            onChange={(e)=>setUser(e.target.value)}\n//            ></input>\n//         </div>          \n//         <div className='inputWrapper'>\n//           <label htmlFor='email'>Email</label>\n//           <input \n//           type='email' \n//           id='email'\n//           value={email}\n//           onChange={(e)=>setEmail(e.target.value)}\n//           />          \n//         </div>\n//         <button type='submit'>Login</button>\n//     </form>\n//   </div>\n// </div>\n;///////////< End of LogIn Interface>///////////////////////////\n};export default Login;","map":{"version":3,"names":["React","useNavigate","useState","apiClient","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","handleLogin","requestParams","val","params","headers","response","post","console","log","error","_error$response","data","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["D:/PROJECT_ON_Github/Hyperledger-Fabric/FrontEnd/src/pages/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport \"./Login.css\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport{useState} from \"react\"\r\nimport apiClient from '../communication/apiClient'\r\n\r\nconst Login = () => {\r\n  \r\n  const [email, setEmail] = useState('drsudip.robotics@gmail.com');\r\n  const [password, setPassword] = useState('Sudip@123');\r\n\r\n  // const handleLogin = async () => {\r\n  //   try {\r\n  //     const response = await apiClient.post('/login', { email, password });\r\n  //     const { token } = response.data;\r\n\r\n  //     // Store token in localStorage\r\n  //     localStorage.setItem('authToken', token);\r\n  //     alert('Login successful! Token stored.');\r\n  //   } catch (error) {\r\n  //     console.error(error.response?.data || 'Login error');\r\n  //     alert('Invalid login credentials');\r\n  //   }\r\n  // };\r\n\r\n    // const[user,setUser]=useState(\"\");\r\n    // // const[email,setEmail]=useState(\"\");\r\n    // const navigate=useNavigate();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const handleLogin=(e)=>{\r\n  //   e.preventDefault();\r\n  //   navigate(-1);\r\n  //   localStorage.setItem(\"user\",JSON.stringify(user));\r\n  //   setUser(\"\");\r\n  //   setEmail(\"\");\r\n  //   console.log(\"login button pressed\");\r\n\r\n  // }\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////\r\n    const handleLogin = async () => {\r\n      try {\r\n  \r\n          const requestParams  = {\r\n            email,\r\n            password\r\n          };\r\n  \r\n          const val={\r\n            params: requestParams,\r\n            headers: \r\n            {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer your-token-here'\r\n            }\r\n          }\r\n          ///////////////////////////////////////////////\r\n          // const response = await apiClient.get('/auth/test3', val);\r\n          const response = await apiClient.post('/auth/login', requestParams);\r\n          console.log(response);\r\n\r\n    // /////////////////////////////////////// /////////\r\n    //  const handleLogin = async () => {\r\n    // try {\r\n\r\n    //     const requestParams  = {\r\n    //       email,\r\n    //       password,\r\n    //       timestamp: Date.now(),\r\n    //       version: '1.0'\r\n    //     };\r\n\r\n    //     const val={\r\n    //       params: requestParams,\r\n    //       headers: \r\n    //       {\r\n    //         'Content-Type': 'application/json',\r\n    //         'Authorization': 'Bearer your-token-here'\r\n    //       }\r\n    //     }\r\n\r\n    //  const response = await apiClient.get('/logIn', val);\r\n       // alert(response.data.message);\r\n\r\n    //     ///////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n    \r\n        // console.log(\"dfgfdgdfgdfgdg@@@@@@@@@@\", val);\r\n\r\n        // Modify the request line with additional parameters\r\n       \r\n        \r\n\r\n\r\n\r\n      // const response = await apiClient.get('/test', { email, password });\r\n      // const { token } = response.data;\r\n\r\n      // // Store token in localStorage\r\n      // localStorage.setItem('authToken', token);\r\n      // alert('Login successful! Token stored.');\r\n    } catch (error) {\r\n      console.error(error.response?.data || 'Login error');\r\n    //  alert('Invalid login credentials');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //////////<LogIn>//////////////////////////////////////////////\r\n  return (\r\n\r\n    <div>\r\n    <h1>Login</h1>\r\n    <input\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n    />\r\n    <input\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}\r\n    />\r\n    <button onClick={handleLogin}>Login</button>\r\n  </div>\r\n\r\n\r\n    // <div className='loginWrapper'>\r\n    //   <div className='formWrapper'>\r\n    //       <form onSubmit={handleSubmit}>\r\n    //         <div className='inputWrapper'>\r\n    //            <label htmlFor='name'>Name</label>\r\n    //            <input type='text' id='name' value={user}\r\n    //            onChange={(e)=>setUser(e.target.value)}\r\n    //            ></input>\r\n    //         </div>          \r\n    //         <div className='inputWrapper'>\r\n    //           <label htmlFor='email'>Email</label>\r\n    //           <input \r\n    //           type='email' \r\n    //           id='email'\r\n    //           value={email}\r\n    //           onChange={(e)=>setEmail(e.target.value)}\r\n    //           />          \r\n    //         </div>\r\n    //         <button type='submit'>Login</button>\r\n    //     </form>\r\n    //   </div>\r\n   \r\n    // </div>\r\n  )\r\n  ///////////< End of LogIn Interface>///////////////////////////\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,aAAa,CACpB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAAOC,QAAQ,KAAO,OAAO,CAC7B,MAAO,CAAAC,SAAS,KAAM,4BAA4B,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAElB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,4BAA4B,CAAC,CAChE,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,WAAW,CAAC,CAErD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AASF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIE;AACA,KAAM,CAAAW,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CAEA,KAAM,CAAAC,aAAa,CAAI,CACrBL,KAAK,CACLE,QACF,CAAC,CAED,KAAM,CAAAI,GAAG,CAAC,CACRC,MAAM,CAAEF,aAAa,CACrBG,OAAO,CACP,CACE,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,wBACnB,CACF,CAAC,CACD;AACA;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,SAAS,CAACgB,IAAI,CAAC,aAAa,CAAEL,aAAa,CAAC,CACnEM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAE3B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACG;AAEH;AAMI;AAEA;AAMF;AACA;AAEA;AACA;AACA;AACF,CAAE,MAAOI,KAAK,CAAE,KAAAC,eAAA,CACdH,OAAO,CAACE,KAAK,CAAC,EAAAC,eAAA,CAAAD,KAAK,CAACJ,QAAQ,UAAAK,eAAA,iBAAdA,eAAA,CAAgBC,IAAI,GAAI,aAAa,CAAC,CACtD;AACA,CACF,CAAC,CAID;AACA,mBAEEjB,KAAA,QAAAkB,QAAA,eACApB,IAAA,OAAAoB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdpB,IAAA,UACEqB,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAEnB,KAAM,CACboB,QAAQ,CAAGC,CAAC,EAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC3C,CAAC,cACFvB,IAAA,UACEqB,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEjB,QAAS,CAChBkB,QAAQ,CAAGC,CAAC,EAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,cACFvB,IAAA,WAAQ2B,OAAO,CAAEnB,WAAY,CAAAY,QAAA,CAAC,OAAK,CAAQ,CAAC,EACzC,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA,CAEF;AAKF,CAAC,CAED,cAAe,CAAAjB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}